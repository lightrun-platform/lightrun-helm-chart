name: Changelog Format Check
trigger: none  # No trigger on push; only runs on PRs

pr:
  branches:
    include:
      - main
  autoCancel: true

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self
    fetchDepth: 0  # Ensure full commit history for validation

  - script: |
      # Define changelog format regex
      CHANGELOG_REGEX="^(?:([A-Z]+-[0-9]+)-)?([^-]+)-(.+)$"
      ALLOWED_CHANGELOG_TYPES="added versions changed deprecated removed fixed security docs other"

      # Get PR details
      PR_ID=$(System.PullRequest.PullRequestId)
      PROJECT=$(System.TeamProject)
      REPO=$(Build.Repository.Name)
      ORG_URL=$(System.CollectionUri)

      if [ -z "$PR_ID" ]; then
        echo "❌ This pipeline should only run on PRs."
        exit 1
      fi

      # Get PR title using GitHub API
      PR_RESPONSE=$(curl --silent \
        --header "Authorization: token $(System.AccessToken)" \
        --header "Accept: application/vnd.github.v3+json" \
        "https://api.github.com/repos/lightrun-platform/lightrun-helm-chart/pulls/$PR_ID")

      echo "API Response: $PR_RESPONSE"

      PR_TITLE=$(echo "$PR_RESPONSE" | jq -r .title)

      if [ -z "$PR_TITLE" ]; then
        echo "❌ PR title is empty. Please set a title for your PR."
        exit 1
      fi

      echo "Checking PR #$PR_ID in repo $REPO"
      echo "PR Title: $PR_TITLE"

      # Get PR labels using GitHub API
      LABELS=$(curl --silent \
        --header "Authorization: token $(System.AccessToken)" \
        --header "Accept: application/vnd.github.v3+json" \
        "https://api.github.com/repos/lightrun-platform/lightrun-helm-chart/pulls/$PR_ID/labels")

      if [ -z "$LABELS" ] || [[ "$LABELS" == *"html"* ]]; then
        echo "⚠️ Warning: Could not retrieve labels, skipping check."
      elif echo "$LABELS" | jq -r '.[].name' | grep -q "skip-changelog-format"; then
        echo "✅ Skipping PR title validation for changelog format due to 'skip-changelog-format' label."
        exit 0
      fi

      # Validate PR title against changelog format
      if ! [[ "$PR_TITLE" =~ $CHANGELOG_REGEX ]]; then
        echo "❌ PR title does not match changelog format: $PR_TITLE"
        echo "Expected format: [JIRA-ID-]type-description"
        echo "Example: DEVOPS-123-added-new-feature"
        echo "Allowed changelog types: $ALLOWED_CHANGELOG_TYPES"
        exit 1
      fi

      # Extract Type and validate it
      TYPE=$(echo "$PR_TITLE" | sed -E "s/$CHANGELOG_REGEX/\2/")
      if ! echo "$ALLOWED_CHANGELOG_TYPES" | grep -qw "$TYPE"; then
        echo "❌ PR title type '$TYPE' is not allowed. Allowed changelog types: $ALLOWED_CHANGELOG_TYPES"
        exit 1
      fi

      echo "✅ PR title follows the required changelog format."
    displayName: "Validate PR Title for Changelog"
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
