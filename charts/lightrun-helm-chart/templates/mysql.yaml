{{ if .Values.general.db_local }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "mysql.name" . }}
  labels:
    app: {{ include "mysql.name" . }}
    {{ with .Values.deployments.mysql.service.labels }}
    {{ toYaml . | nindent 4 }}
    {{ end }}
  {{ with .Values.deployments.mysql.service.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{ end }}
spec:
  ports:
  - port: 3306
  clusterIP: None
  selector:
    app: {{ include "mysql.name" . }}
---
{{- if .Values.general.statefulset.enabled }}
apiVersion: apps/v1
kind: StatefulSet
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: {{ include "mysql.name" . }}
  labels:
    app: {{ include "mysql.name" . }}
  {{- if or .Values.deployments.mysql.annotations .Values.deployments.mysql.podAnnotations }}
  annotations:
  {{- end }}
    {{- with .Values.deployments.mysql.annotations }}
    {{/* deprecated if favor of podAnnotations */}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
    {{- with .Values.deployments.mysql.podAnnotations }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- with .Values.general.statefulset.persistentVolumeClaimRetentionPolicy }}
  persistentVolumeClaimRetentionPolicy:
    {{ . | toYaml | nindent 4 }}
  {{- end }}
  replicas: 1 
  selector:
    matchLabels:
      app: {{ include "mysql.name" . }}
{{- if .Values.general.statefulset.enabled }}
  serviceName: {{ include "mysql.name" . }}
  # minReadySeconds: 10 # by default is 0
{{- end }}
  template:
    metadata:
      {{- with .Values.deployments.mysql.annotations }}
      annotations:
        {{ toYaml . | nindent 8 }}
      {{- end }}

      labels:
        app: {{ include "mysql.name" . }}
        {{- with .Values.deployments.mysql.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
{{- if .Values.general.statefulset.enabled }}
      terminationGracePeriodSeconds: 10
{{- end }}
      securityContext: {{- include "mysql.podBaseSecurityContext" . | indent 8 }}
      serviceAccountName: {{ template "mysql.serviceAccountName" . }}
      {{- if .Values.secrets.defaults.dockerhub_config }}
      imagePullSecrets:
      {{- if .Values.secrets.defaults.dockerhub_config.existingSecret }}
        - name: {{ .Values.secrets.defaults.dockerhub_config.existingSecret }}
      {{- else }}
        - name: {{ include "secrets.dockerhub.name" . }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ include "mysql.name" . }}
          securityContext: {{- include "mysql.containerSecurityContext" . | indent 12 }}
          image: "{{ .Values.deployments.mysql.image.repository }}:{{ .Values.deployments.mysql.image.tag }}"
          imagePullPolicy: {{ .Values.deployments.mysql.image.pullPolicy }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.deployments.mysql.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.deployments.mysql.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.deployments.mysql.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployments.mysql.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployments.mysql.livenessProbe.failureThreshold }}
            exec:
              command:
                - bash 
                - -c
                - mysql -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" -h 127.0.0.1 -e 'SELECT 1' {{ if not .Values.general.db_require_secure_transport }}--ssl-mode=DISABLED{{ end }} --get-server-public-key
          readinessProbe:
            exec:
              command:
                - bash 
                - -c
                - mysql -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" -h 127.0.0.1 -e 'SELECT 1' {{ if not .Values.general.db_require_secure_transport }}--ssl-mode=DISABLED{{ end }} --get-server-public-key
            initialDelaySeconds: {{ .Values.deployments.mysql.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployments.mysql.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployments.mysql.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.deployments.mysql.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployments.mysql.readinessProbe.failureThreshold }}
          resources:
            requests:
              cpu: {{ .Values.deployments.mysql.resources.cpu }}
              memory: {{ .Values.deployments.mysql.resources.memory }}
            limits:
              cpu: {{ .Values.deployments.mysql.resources.cpu }}
              memory: {{ .Values.deployments.mysql.resources.memory }}        
          args: [
            "--lower_case_table_names=1",
            "--skip-log-bin",
            {{- if .Values.general.db_require_secure_transport }}
            "--require-secure-transport=ON",
            {{- else }}
            "--skip-ssl",
            {{- end }}
            "--character_set_server=utf8mb4",
            "--explicit_defaults_for_timestamp",
            "--max_connections=1000"
                ]
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "secrets.keycloak.name" . }}
                  key: DB_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "secrets.keycloak.name" . }}
                  key: DB_PASSWORD
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "secrets.keycloak.name" . }}
                  key: DB_PASSWORD
            - name: MYSQL_DATABASE
              value: {{ .Values.general.db_database }}
            - name: MYSQL_TCP_PORT
              value: "3306"
          ports:
          - containerPort: 3306
          volumeMounts:
          - name: {{ include "mysql.pvc.name" . }}
            mountPath: /var/lib/mysql
      {{- if .Values.general.tolerations }}
      tolerations:
        {{ toYaml .Values.general.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.deployments.mysql.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.deployments.mysql.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.deployments.mysql.affinity }}
      affinity:
        {{ toYaml .Values.deployments.mysql.affinity | nindent 8 }}
      {{- end }}
{{- if .Values.general.statefulset.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "mysql.pvc.name" . }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.general.statefulset.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.general.statefulset.storageSize }}
{{- else }}
      volumes:
        - name: {{ include "mysql.pvc.name" . }}
          emptyDir:
            sizeLimit: {{ .Values.deployments.mysql.emptyDir.sizeLimit }}
{{- end }}

{{ end }}
