apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lightrun-fe.name" . }}
  labels:
    app: {{ include "lightrun-fe.name" . }}
  {{- with .Values.deployments.frontend.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.deployments.frontend.hpa.enabled}}
  replicas: {{ .Values.deployments.frontend.replicas }}
  {{- end }}
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ include "lightrun-fe.name" . }}
  template:
    metadata:
      {{- if or .Values.deployments.frontend.annotations .Values.deployments.frontend.podAnnotations }}
      annotations:
      {{- end }}
        {{- with .Values.deployments.frontend.annotations }}
        {{/* deprecated if favor of podAnnotations */}}
        {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.deployments.frontend.podAnnotations }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app: {{ include "lightrun-fe.name" . }}
        {{- with .Values.deployments.frontend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.deployments.frontend.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{ toYaml .Values.deployments.frontend.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "lightrun-fe.serviceAccountName" . }}
      {{- if .Values.secrets.defaults.dockerhub_config }}
      imagePullSecrets:
      {{- if .Values.secrets.defaults.dockerhub_config.existingSecret }}
        - name: {{ .Values.secrets.defaults.dockerhub_config.existingSecret }}
      {{- else }}
        - name: {{ include "secrets.dockerhub.name" . }}
      {{- end -}}
      {{- end }}
      {{- if .Values.deployments.frontend.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.deployments.frontend.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "lightrun-fe.name" . }}
          securityContext: {{- include "lightrun-fe.containerSecurityContext" . | indent 12 }}
          image: "{{ .Values.deployments.frontend.image.repository }}:{{ .Values.deployments.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.deployments.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ .Values.deployments.frontend.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.deployments.frontend.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.deployments.frontend.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployments.frontend.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployments.frontend.livenessProbe.failureThreshold }}
            httpGet:
              scheme: {{ include "http.scheme" . | upper }}
              path: /health
              port: http
          readinessProbe:
            initialDelaySeconds: {{ .Values.deployments.frontend.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.deployments.frontend.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.deployments.frontend.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployments.frontend.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployments.frontend.readinessProbe.failureThreshold }}
            httpGet:
              scheme: {{ include "http.scheme" . | upper }}
              path: /health
              port: http
          resources:
            requests:
              cpu: {{ .Values.deployments.frontend.resources.cpu }}
              memory: {{ .Values.deployments.frontend.resources.memory }}
            limits:
              cpu: {{ .Values.deployments.frontend.resources.cpu }}
              memory: {{ .Values.deployments.frontend.resources.memory }}
          env:
            - name: BACKEND_URI
              value: {{ include "lightrun-be.name" . }}
            - name: KEYCLOAK_URI
              value: {{ include "lightrun-keycloak.serviceName" . }}
            {{- if .Values.deployments.frontend.extraEnvs }}
          
              {{- toYaml .Values.deployments.frontend.extraEnvs | nindent 12 }}
            {{- end }}
          volumeMounts:
          - name: frontend-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
            readOnly: false
          {{- with .Values.deployments.frontend.extraVolumeMounts }}
          {{ toYaml . | nindent 10 }}
          {{- end }}
          {{- if .Values.general.readOnlyRootFilesystem }}
          - name: tmpfs
            mountPath: /etc/nginx/conf.d
            subPath: conf.d
          - name: tmpfs
            mountPath: /tmp
            subPath: tmp
          {{- end -}}
          {{ if .Values.general.internal_tls.enabled }}
          - name: internal-cert
            mountPath: /cert/
            readOnly: true
          {{ end }}
      {{- if .Values.general.tolerations }}
      tolerations:
        {{ toYaml .Values.general.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.general.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.general.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.deployments.frontend.affinity }}
      affinity:
        {{ toYaml .Values.deployments.frontend.affinity | nindent 8 }}
      {{- end }}
      volumes:
      - name: frontend-config
        configMap:
          name: {{ include "lightrun-fe.name" . }}-config
          items:
            - key: default.conf
              path: default.conf
      {{- with .Values.deployments.frontend.extraVolumes }}
        {{ toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.general.readOnlyRootFilesystem }}
      - name: tmpfs
        emptyDir:
          sizeLimit: {{ .Values.general.readOnlyRootFilesystem_tmpfs_sizeLimit }}
      {{- end -}}
      {{- if .Values.general.internal_tls.enabled }}
      - name: internal-cert
        secret:
          {{- if eq .Values.general.internal_tls.certificates.source "generate_self_signed_certificates" }}
          secretName: {{ include "lightrun-fe.name" . }}-cert
          {{- else if eq .Values.general.internal_tls.certificates.source "existing_certificates" }}
          secretName: {{ .Values.general.internal_tls.certificates.existing_certificates.frontend }}
          {{- end }}
      {{- end }}
