{{ if not .Values.general.ingress_controller }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nginx.conf-cm.name" . }}
data:
  default.conf: |
      server {
        server_name {{ .Values.general.lightrun_endpoint }};
        listen {{ .Values.deployments.standalone_nginx.ports.http }};
        return 301 https://$host$request_uri;
      }
      server {
        listen {{ .Values.deployments.standalone_nginx.ports.https }} ssl;

        server_name {{ .Values.general.lightrun_endpoint }};
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate     /cert/tls.crt;
        ssl_certificate_key /cert/tls.key;

        proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address 
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
        proxy_set_header Host $host; # to forward the original host requested by the client

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        client_max_body_size 10m;
        proxy_buffers 512 4k;
        proxy_buffer_size 1m;
        proxy_busy_buffers_size 1280k;

        location /auth {
            proxy_pass http://{{ include "lightrun-keycloak.name" . }}:8080;
        }

        location /device {
            proxy_pass http://{{ include "lightrun-fe.name" . }}:8080;
        }

        location /app {
            proxy_pass http://{{ include "lightrun-fe.name" . }}:8080;
        }

        location /company {
            proxy_pass http://{{ include "lightrun-fe.name" . }}:8080;
        }

        location /content {
            proxy_pass http://{{ include "lightrun-fe.name" . }}:8080;
        }

        location = / {
            proxy_pass http://{{ include "lightrun-fe.name" . }}:8080;
        }

        location / {
            proxy_pass http://{{ include "lightrun-be.name" . }}:8080;
        }
      }
{{end}}