{{ if not .Values.deployments.redis.external.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lightrun-redis.name" . }}
  {{- with .Values.deployments.redis.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "lightrun-redis.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "lightrun-redis.name" . }}
        {{- with .Values.deployments.redis.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.deployments.redis.podAnnotations }}
      annotations:
        {{ toYaml . | nindent 8 }}
      {{- end }}

    spec:
      serviceAccountName: {{ template "lightrun-redis.serviceAccountName" . }}
        {{- if .Values.deployments.redis.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.deployments.redis.podSecurityContext | nindent 8 }}
        {{- end }}
      {{- if .Values.secrets.defaults.dockerhub_config }}
      imagePullSecrets:
      {{- if .Values.secrets.defaults.dockerhub_config.existingSecret }}
        - name: {{ .Values.secrets.defaults.dockerhub_config.existingSecret }}
      {{- else }}
        - name: {{ include "secrets.dockerhub.name" . }}
      {{- end -}}
      {{- end }}
      containers:
        - name: {{ include "lightrun-redis.name" . }}
          securityContext: {{- include "lightrun-redis.containerSecurityContext" . | indent 12 }}
          resources:  
            requests:
              cpu: {{ .Values.deployments.redis.resources.cpu }}
              memory: {{ .Values.deployments.redis.resources.memory }}
            limits:
              cpu: {{ .Values.deployments.redis.resources.cpu }}
              memory: {{ .Values.deployments.redis.resources.memory }}
          image: {{ .Values.deployments.redis.image.repository }}:{{ .Values.deployments.redis.image.tag }}
          imagePullPolicy: {{ .Values.deployments.redis.image.pullPolicy }}
          livenessProbe: {{ include "lightrun-redis.probe" . | nindent 12 }}
            initialDelaySeconds: {{ .Values.deployments.redis.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployments.redis.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployments.redis.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.deployments.redis.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployments.redis.livenessProbe.failureThreshold }}
          readinessProbe: {{  include "lightrun-redis.probe" . | nindent 12 }}
            initialDelaySeconds: {{ .Values.deployments.redis.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployments.redis.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployments.redis.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.deployments.redis.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployments.redis.readinessProbe.failureThreshold }}
          command:
            - redis-server
            - /usr/local/etc/redis/redis.conf
          {{- if .Values.deployments.redis.auth.enabled }}
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: SPRING_REDIS_PASSWORD
                  name: {{ include "secrets.backend.name" . }}
          args:
            - "--requirepass $(REDIS_PASSWORD)"
          {{- end }}
          volumeMounts:
          - name: data
            mountPath: /data
            readOnly: false
          - name: redis-conf
            mountPath: /usr/local/etc/redis/redis.conf
            subPath: redis.conf
            readOnly: true
          {{- if .Values.general.internal_tls.enabled }}
          - name: internal-cert
            mountPath: /tmp/certs/
            readOnly: true
          {{- if .Values.general.internal_tls.certificates.existing_ca_secret_name }}   
          - name: internal-ca
            mountPath: /tmp/ca-cert/ca.crt
            subPath: ca.crt
            readOnly: true
          {{- end }}
          {{- end }}
      {{- if .Values.general.tolerations }}
      tolerations:
        {{ toYaml .Values.general.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.general.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.general.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.deployments.redis.affinity }}
      affinity:
        {{ toYaml .Values.deployments.redis.affinity | nindent 8 }}
      {{- end }}
      volumes:
      - name: redis-conf
        configMap:
          name: {{ include "lightrun-redis.name" . }}-config
          items:
            - key: redis.conf
              path: redis.conf
      - name: data
        emptyDir:
          sizeLimit: {{ .Values.deployments.redis.emptyDir.sizeLimit }}
      {{- if .Values.general.internal_tls.enabled }}
      - name: internal-cert
        secret:
          {{- if eq .Values.general.internal_tls.certificates.source "generate_self_signed_certificates" }}
          secretName: {{ include "lightrun-redis.name" . }}-cert
          {{- else if eq .Values.general.internal_tls.certificates.source "existing_certificates" }}
          secretName: {{ .Values.general.internal_tls.certificates.existing_certificates.redis }}
          {{- end }}
      {{- if .Values.general.internal_tls.certificates.existing_ca_secret_name }} 
      - name: internal-ca
        secret:
          secretName: {{ .Values.general.internal_tls.certificates.existing_ca_secret_name }}
          items:
            - key: ca.crt
              path: ca.crt
      {{- end }}
      {{- end }}
{{ end }}
